{"ast":null,"code":"import _slicedToArray from\"/home/bela/TPL/frontend-challenges/js/03_react/weather/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import'./App.css';import\"./components/fore-cast\";import{MainPart}from\"./components/main-part\";import{CastType,ForeCast}from\"./components/fore-cast\";import{useFetch,useFetchLocation}from\"./utils/Hooks/useFetch\";import useLocation from\"./utils/Hooks/useLocation\";import{getWeatherStatus,getWeatherType,WeatherType}from\"./utils/GetWeatherType\";import{useInterval}from\"./utils/Hooks/useInterval\";import{timeZoneOffset}from\"./utils/constant\";import{addHours}from\"./utils/time/addHours\";import{getDayPreviews,getHourPreviews}from\"./utils/previews/hourPreviews\";import{getDayFromDate,getDayFromString}from\"./utils/time/formatTime\";import{LocationBar}from\"./components/location-bar\";import useDebounce from\"./utils/Hooks/useDebounce\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(addHours(timeZoneOffset).toISOString().substring(0,19)),_useState2=_slicedToArray(_useState,2),currentTimeExact=_useState2[0],setCurrentTimeExact=_useState2[1];var _useState3=useState(-1),_useState4=_slicedToArray(_useState3,2),previewIndex=_useState4[0],setPreviewIndex=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),previewDataDay=_useState6[0],setPreviewDataDay=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),previewDataWeek=_useState8[0],setPreviewDataWeek=_useState8[1];var currentTime=currentTimeExact.substring(0,16);var _useLocation=useLocation(null),_useLocation2=_slicedToArray(_useLocation,2),currentCoords=_useLocation2[0],setCoords=_useLocation2[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),currentCity=_useState10[0],setCurrentCity=_useState10[1];var url=currentCoords&&\"https://api.open-meteo.com/v1/forecast?latitude=\".concat(currentCoords[0],\"&longitude=\").concat(currentCoords[1],\"&hourly=temperature_2m,weathercode&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&timezone=Europe%2FBerlin\");var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),inputCity=_useState12[0],setInputCity=_useState12[1];var _useDebounce=useDebounce(\"https://geocoding-api.open-meteo.com/v1/search?name=\".concat(inputCity,\"&count=5\"),300),_useDebounce2=_slicedToArray(_useDebounce,2),locationURL=_useDebounce2[0],setLocationURL=_useDebounce2[1];var locations=useFetchLocation(locationURL);var allData=useFetch(url);useEffect(function(){if(previewIndex==-1||allData===null){setPreviewDataDay(null);}else if(allData!=null){var newPreviewData=getHourPreviews(allData.hourly,allData.hourly.time[previewIndex]);setPreviewDataDay({previewData:newPreviewData,headline:getDayFromString(allData.hourly.time[previewIndex])+\" - Ganzer Tag\"});}},[previewIndex,allData]);useEffect(function(){if(previewIndex==-1&&allData!=null){setPreviewDataWeek({previewData:getDayPreviews(allData.daily),headline:\"Diese Woche\"});}},[previewIndex,allData]);useEffect(function(){console.log(\"coords changed to \",currentCoords);},[currentCoords]);useInterval(function(){return setCurrentTimeExact(addHours(timeZoneOffset+1/60,new Date(currentTime)).toISOString().substring(0,19));},60000);function getIconURL(code){var weatherType=getWeatherType(code);weatherType=weatherType===WeatherType.FREEZING_RAIN?WeatherType.RAIN:weatherType;return\"./assets/icons/\".concat(weatherType,\".svg\");}function getBackgroundUrl(code){var weatherType=getWeatherType(code);weatherType=weatherType===WeatherType.FREEZING_RAIN?WeatherType.RAIN:weatherType;var url=\"url(./assets/backgrounds/\".concat(weatherType,\".png)\");return url;}function roundTime(currentTime){return currentTime.substring(0,14)+\"00\";}function changePreviewIndex(day){var index=allData?allData.hourly.time.indexOf(day):0;setPreviewIndex(index);}getDayFromDate(new Date(Date.now()));if(!allData)return/*#__PURE__*/_jsx(\"div\",{className:\"loader\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"app screen-overlay\",style:{backgroundImage:getBackgroundUrl(allData.hourly.weathercode[allData.hourly.time.indexOf(roundTime(currentTime))])},children:[/*#__PURE__*/_jsx(MainPart,{currentTime:currentTime,getWeatherStatus:getWeatherStatus,hourly:allData.hourly,getIconURL:getIconURL,city:currentCity}),/*#__PURE__*/_jsx(\"h2\",{className:\"cityHeadline\",children:\"Change your city\"}),/*#__PURE__*/_jsx(LocationBar,{setLocationInput:setInputCity,cities:locations,setCurrentCoords:setCoords,setCity:setCurrentCity}),/*#__PURE__*/_jsx(ForeCast,{castType:CastType.HOURLY,previewData:getHourPreviews(allData.hourly),changePreviewIndex:changePreviewIndex,headline:\"Rest des Tages\"}),/*#__PURE__*/_jsx(ForeCast,{castType:CastType.DAILY,previewData:previewDataWeek?previewDataWeek.previewData:null,changePreviewIndex:changePreviewIndex,headline:previewDataWeek?previewDataWeek.headline:\"\"}),/*#__PURE__*/_jsx(ForeCast,{previewData:previewDataDay?previewDataDay.previewData:null,castType:CastType.FULLDAY,changePreviewIndex:changePreviewIndex,headline:previewDataDay?previewDataDay.headline:\"\"})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","MainPart","CastType","ForeCast","useFetch","useFetchLocation","useLocation","getWeatherStatus","getWeatherType","WeatherType","useInterval","timeZoneOffset","addHours","getDayPreviews","getHourPreviews","getDayFromDate","getDayFromString","LocationBar","useDebounce","App","toISOString","substring","currentTimeExact","setCurrentTimeExact","previewIndex","setPreviewIndex","previewDataDay","setPreviewDataDay","previewDataWeek","setPreviewDataWeek","currentTime","currentCoords","setCoords","currentCity","setCurrentCity","url","inputCity","setInputCity","locationURL","setLocationURL","locations","allData","newPreviewData","hourly","time","previewData","headline","daily","console","log","Date","getIconURL","code","weatherType","FREEZING_RAIN","RAIN","getBackgroundUrl","roundTime","changePreviewIndex","day","index","indexOf","now","backgroundImage","weathercode","HOURLY","DAILY","FULLDAY"],"sources":["/home/bela/TPL/frontend-challenges/js/03_react/weather/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport \"./components/fore-cast\"\nimport {MainPart} from \"./components/main-part\";\nimport {CastType, ForeCast} from \"./components/fore-cast\";\nimport {useFetch, useFetchLocation} from \"./utils/Hooks/useFetch\";\nimport useLocation from \"./utils/Hooks/useLocation\";\nimport {getWeatherStatus, getWeatherType, WeatherType} from \"./utils/GetWeatherType\";\nimport {useInterval} from \"./utils/Hooks/useInterval\"\nimport {timeZoneOffset} from \"./utils/constant\";\nimport {addHours} from \"./utils/time/addHours\";\nimport {getDayPreviews, getHourPreviews, previewData} from \"./utils/previews/hourPreviews\";\nimport {getDayFromDate, getDayFromString} from \"./utils/time/formatTime\";\nimport {LocationBar} from \"./components/location-bar\";\nimport useDebounce from \"./utils/Hooks/useDebounce\";\n\ninterface previewsData {\n    previewData: previewData[];\n    headline: string;\n}\n\nfunction App() {\n    const [currentTimeExact, setCurrentTimeExact] = useState(addHours(timeZoneOffset).toISOString().substring(0, 19));\n    const [previewIndex, setPreviewIndex] = useState<number>(-1);\n    const [previewDataDay, setPreviewDataDay] = useState<previewsData | null>(null)\n    const [previewDataWeek, setPreviewDataWeek] = useState<previewsData | null>()\n    const currentTime = currentTimeExact.substring(0,16);\n    const [currentCoords, setCoords] = useLocation(null);\n    const [currentCity, setCurrentCity] = useState<string | null>(null);\n    const url = currentCoords && `https://api.open-meteo.com/v1/forecast?latitude=${currentCoords[0]}&longitude=${currentCoords[1]}&hourly=temperature_2m,weathercode&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&timezone=Europe%2FBerlin`;\n    const [inputCity, setInputCity] = useState(\"\");\n    const [locationURL, setLocationURL] = useDebounce(`https://geocoding-api.open-meteo.com/v1/search?name=${inputCity}&count=5`, 300);\n    const locations = useFetchLocation(locationURL);\n    const allData = useFetch(url);\n\n    useEffect(() => {\n        if (previewIndex == -1 || allData === null){\n            setPreviewDataDay(null)\n        } else if (allData != null){\n            const newPreviewData = getHourPreviews(allData.hourly, allData.hourly.time[previewIndex]);\n            setPreviewDataDay({previewData: newPreviewData, headline: getDayFromString(allData.hourly.time[previewIndex]) + \" - Ganzer Tag\"});\n        }\n    }, [previewIndex, allData])\n\n    useEffect(() => {\n        if (previewIndex == -1 && allData!=null){\n            setPreviewDataWeek({previewData:getDayPreviews(allData.daily), headline:\"Diese Woche\"})\n        }\n    }, [previewIndex, allData])\n    useEffect(() => {\n        console.log(\"coords changed to \", currentCoords);\n    }, [currentCoords])\n\n    useInterval(() => setCurrentTimeExact(addHours(timeZoneOffset + 1/(60), new Date(currentTime)).toISOString().substring(0,19)), 60000)\n\n\n    function getIconURL(code: number) {\n        let weatherType = getWeatherType(code);\n        weatherType = weatherType === WeatherType.FREEZING_RAIN ? WeatherType.RAIN : weatherType;\n\n        return `./assets/icons/${weatherType}.svg`;\n    }\n\n    function getBackgroundUrl(code: number) {\n        let weatherType = getWeatherType(code)\n        weatherType = weatherType === WeatherType.FREEZING_RAIN ? WeatherType.RAIN : weatherType;\n        let url =  `url(./assets/backgrounds/${weatherType}.png)`;\n        return url;\n    }\n\n    function roundTime(currentTime: string) {\n        return currentTime.substring(0,14) + \"00\";\n    }\n\n    function changePreviewIndex(day: string){\n        let index = allData? allData.hourly.time.indexOf(day): 0;\n        setPreviewIndex(index);\n    }\n\n    getDayFromDate(new Date(Date.now()))\n    if (!allData) return <div className=\"loader\"/>\n    return (\n        <div className=\"app screen-overlay\"\n             style={{backgroundImage: getBackgroundUrl(allData.hourly.weathercode[allData.hourly.time.indexOf(roundTime(currentTime))])}}>\n            <MainPart currentTime={currentTime} getWeatherStatus={getWeatherStatus} hourly={allData.hourly}\n                      getIconURL={getIconURL} city={currentCity}/>\n            <h2 className={\"cityHeadline\"}>Change your city</h2>\n            <LocationBar setLocationInput={setInputCity} cities={locations} setCurrentCoords={setCoords} setCity={setCurrentCity}/>\n            <ForeCast castType={CastType.HOURLY} previewData={getHourPreviews(allData.hourly)} changePreviewIndex={changePreviewIndex} headline={\"Rest des Tages\"}/>\n            <ForeCast castType={CastType.DAILY} previewData={previewDataWeek? previewDataWeek.previewData: null} changePreviewIndex={changePreviewIndex} headline={previewDataWeek? previewDataWeek.headline: \"\"}/>\n            <ForeCast previewData={previewDataDay? previewDataDay.previewData : null} castType={CastType.FULLDAY} changePreviewIndex={changePreviewIndex} headline={previewDataDay? previewDataDay.headline: \"\"}/>\n        </div>);\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}