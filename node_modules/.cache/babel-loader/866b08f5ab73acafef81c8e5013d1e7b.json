{"ast":null,"code":"var _jsxFileName = \"/home/bela/TPL/frontend-challenges/js/03_react/weather/src/components/fore-cast.tsx\",\n    _s = $RefreshSig$();\n\nimport { PreviewCard } from \"./preview-card\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let CastType;\n\n(function (CastType) {\n  CastType[\"HOURLY\"] = \"hourly\";\n  CastType[\"DAILY\"] = \"daily\";\n  CastType[\"FULLDAY\"] = \"fullday\";\n})(CastType || (CastType = {}));\n\nexport const ForeCast = _ref => {\n  _s();\n\n  let {\n    castType,\n    previewData,\n    changePreviewIndex,\n    headline\n  } = _ref;\n  const [cards, setCards] = useState(previewData);\n  useEffect(() => {\n    setCards(previewData);\n  }, [previewData]);\n  const onClick = castType === CastType.DAILY && cards ? index => {\n    let newCards = [...cards];\n    let unclick = false;\n    newCards = newCards.map((card, i) => {\n      if (index === i && card.clicked) {\n        card.clicked = false;\n        changePreviewIndex(\"1970-00-00\");\n        unclick = true;\n      } else {\n        card.clicked = index === i;\n      }\n\n      return card;\n    });\n    if (unclick) return;\n    setCards(newCards);\n    const day = \"2022-\" + cards[index].weatherData.time.substring(3, 5) + \"-\" + cards[index].weatherData.time.substring(0, 2) + \"T00:00\";\n    changePreviewIndex(day);\n  } : () => {};\n\n  if (!previewData || !cards) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: headline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: castType === CastType.HOURLY ? \"nextHours\" : castType === CastType.FULLDAY ? \"fullDay\" : \"nextDays\",\n      children: cards.map((data, index) => /*#__PURE__*/_jsxDEV(PreviewCard, {\n        degree: data.weatherData.degree,\n        time: data.weatherData.time,\n        status: data.weatherData.status,\n        index: index,\n        onClick: onClick,\n        clicked: data.clicked\n      }, `nextDays ${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ForeCast, \"fZX6Is+xYp5BHvsHIM5feK9vu74=\");\n\n_c = ForeCast;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForeCast\");","map":{"version":3,"names":["PreviewCard","React","useEffect","useState","CastType","ForeCast","castType","previewData","changePreviewIndex","headline","cards","setCards","onClick","DAILY","index","newCards","unclick","map","card","i","clicked","day","weatherData","time","substring","HOURLY","FULLDAY","data","degree","status"],"sources":["/home/bela/TPL/frontend-challenges/js/03_react/weather/src/components/fore-cast.tsx"],"sourcesContent":["import {PreviewCard} from \"./preview-card\";\nimport React, {useEffect, useState} from \"react\";\nimport {previewData} from \"../utils/previews/hourPreviews\";\n\n\ninterface nextHoursProps {\n    previewData: previewData[] | null;\n    castType: CastType;\n    headline: string;\n    changePreviewIndex: (day: string) => void;\n}\n\nexport enum CastType {\n    HOURLY = \"hourly\",\n    DAILY = \"daily\",\n    FULLDAY = \"fullday\"\n}\n\nexport const ForeCast: React.FC<nextHoursProps> = ({\n                                                       castType,\n                                                       previewData,\n                                                       changePreviewIndex,\n                                                       headline\n                                                   }) => {\n    const [cards, setCards] = useState(previewData);\n    useEffect(() => {\n        setCards(previewData)\n    }, [previewData])\n\n    const onClick = castType === CastType.DAILY && cards ? (index: number) => {\n        let newCards = [...cards]\n        let unclick = false;\n        newCards = newCards.map((card, i) => {\n            if (index === i && card.clicked) {\n                card.clicked = false;\n                changePreviewIndex(\"1970-00-00\");\n                unclick = true;\n            } else {\n                card.clicked = index === i;\n            }\n            return card;\n        })\n        if (unclick) return;\n        setCards(newCards);\n        const day = \"2022-\" + cards[index].weatherData.time.substring(3, 5) + \"-\" + cards[index].weatherData.time.substring(0, 2) + \"T00:00\";\n        changePreviewIndex(day);\n    } : () => {\n    }\n\n    if (!previewData || !cards) {\n        return null\n    }\n    return (\n        <>\n            <h2>{headline}</h2>\n            <div\n                className={castType === CastType.HOURLY ? \"nextHours\" : castType === CastType.FULLDAY ? \"fullDay\" : \"nextDays\"}>\n                {\n                    cards.map((data, index) => <PreviewCard key={`nextDays ${index}`} degree={data.weatherData.degree}\n                                                            time={data.weatherData.time}\n                                                            status={data.weatherData.status} index={index} onClick={onClick}\n                                                            clicked={data.clicked}/>\n                    )\n                }\n            </div>\n        </>\n    );\n}"],"mappings":";;;AAAA,SAAQA,WAAR,QAA0B,gBAA1B;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;AAWA,WAAYC,QAAZ;;WAAYA,Q;EAAAA,Q;EAAAA,Q;EAAAA,Q;GAAAA,Q,KAAAA,Q;;AAMZ,OAAO,MAAMC,QAAkC,GAAG,QAKO;EAAA;;EAAA,IALN;IACIC,QADJ;IAEIC,WAFJ;IAGIC,kBAHJ;IAIIC;EAJJ,CAKM;EACrD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,WAAD,CAAlC;EACAL,SAAS,CAAC,MAAM;IACZS,QAAQ,CAACJ,WAAD,CAAR;EACH,CAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;EAIA,MAAMK,OAAO,GAAGN,QAAQ,KAAKF,QAAQ,CAACS,KAAtB,IAA+BH,KAA/B,GAAwCI,KAAD,IAAmB;IACtE,IAAIC,QAAQ,GAAG,CAAC,GAAGL,KAAJ,CAAf;IACA,IAAIM,OAAO,GAAG,KAAd;IACAD,QAAQ,GAAGA,QAAQ,CAACE,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;MACjC,IAAIL,KAAK,KAAKK,CAAV,IAAeD,IAAI,CAACE,OAAxB,EAAiC;QAC7BF,IAAI,CAACE,OAAL,GAAe,KAAf;QACAZ,kBAAkB,CAAC,YAAD,CAAlB;QACAQ,OAAO,GAAG,IAAV;MACH,CAJD,MAIO;QACHE,IAAI,CAACE,OAAL,GAAeN,KAAK,KAAKK,CAAzB;MACH;;MACD,OAAOD,IAAP;IACH,CATU,CAAX;IAUA,IAAIF,OAAJ,EAAa;IACbL,QAAQ,CAACI,QAAD,CAAR;IACA,MAAMM,GAAG,GAAG,UAAUX,KAAK,CAACI,KAAD,CAAL,CAAaQ,WAAb,CAAyBC,IAAzB,CAA8BC,SAA9B,CAAwC,CAAxC,EAA2C,CAA3C,CAAV,GAA0D,GAA1D,GAAgEd,KAAK,CAACI,KAAD,CAAL,CAAaQ,WAAb,CAAyBC,IAAzB,CAA8BC,SAA9B,CAAwC,CAAxC,EAA2C,CAA3C,CAAhE,GAAgH,QAA5H;IACAhB,kBAAkB,CAACa,GAAD,CAAlB;EACH,CAjBe,GAiBZ,MAAM,CACT,CAlBD;;EAoBA,IAAI,CAACd,WAAD,IAAgB,CAACG,KAArB,EAA4B;IACxB,OAAO,IAAP;EACH;;EACD,oBACI;IAAA,wBACI;MAAA,UAAKD;IAAL;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MACI,SAAS,EAAEH,QAAQ,KAAKF,QAAQ,CAACqB,MAAtB,GAA+B,WAA/B,GAA6CnB,QAAQ,KAAKF,QAAQ,CAACsB,OAAtB,GAAgC,SAAhC,GAA4C,UADxG;MAAA,UAGQhB,KAAK,CAACO,GAAN,CAAU,CAACU,IAAD,EAAOb,KAAP,kBAAiB,QAAC,WAAD;QAAuC,MAAM,EAAEa,IAAI,CAACL,WAAL,CAAiBM,MAAhE;QACa,IAAI,EAAED,IAAI,CAACL,WAAL,CAAiBC,IADpC;QAEa,MAAM,EAAEI,IAAI,CAACL,WAAL,CAAiBO,MAFtC;QAE8C,KAAK,EAAEf,KAFrD;QAE4D,OAAO,EAAEF,OAFrE;QAGa,OAAO,EAAEe,IAAI,CAACP;MAH3B,GAAmB,YAAWN,KAAM,EAApC;QAAA;QAAA;QAAA;MAAA,QAA3B;IAHR;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAeH,CAjDM;;GAAMT,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}