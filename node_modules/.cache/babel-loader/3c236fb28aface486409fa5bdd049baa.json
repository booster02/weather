{"ast":null,"code":"var _jsxFileName = \"/home/bela/TPL/frontend-challenges/js/03_react/weather/src/components/location-bar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LocationBar = _ref => {\n  _s();\n\n  var _cities$results2;\n\n  let {\n    setLocationInput,\n    cities,\n    setCurrentCoords\n  } = _ref;\n  const [input, setInput] = useState(\"\");\n\n  const onChange = event => {\n    setInput(event.currentTarget.value);\n  };\n\n  function onKeyDown(event) {\n    var _cities$results;\n\n    console.log(cities === null || cities === void 0 ? void 0 : (_cities$results = cities.results) === null || _cities$results === void 0 ? void 0 : _cities$results.length);\n\n    if (event.key === \"Enter\" && cities !== null && cities !== void 0 && cities.results) {\n      const inputArray = input.split(\",\");\n      const admin3 = inputArray[inputArray.length - 1].trim();\n      let city = cities.results.find(city => city.admin3 === admin3);\n      if (!city) city = cities.results[0];\n      console.log(\"admin3: \", city.admin3);\n      changeCoords(city);\n    }\n  }\n\n  function changeCoords(city) {\n    const lat = city.latitude.toString();\n    const lng = city.longitude.toString();\n    const coords = [lat, lng];\n    console.log(coords, city.name, city.admin3);\n    setCurrentCoords(coords);\n  }\n\n  useEffect(() => {\n    setLocationInput(input.replaceAll(\" \", \"%20\"));\n  }, [input]);\n  const options = new Array();\n  cities === null || cities === void 0 ? void 0 : (_cities$results2 = cities.results) === null || _cities$results2 === void 0 ? void 0 : _cities$results2.forEach(city => {\n    const id = city.id;\n    const name = city.name;\n    const country = city.country;\n    const admin1 = city.admin1;\n    const admin3 = city.admin3;\n    options.push({\n      id,\n      name,\n      country,\n      admin1,\n      admin3\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: \"cities\",\n      children: options.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: city.name + \", \" + city.country + \", \" + city.admin1 + (city.admin3 ? \", \" + city.admin3 : \"\")\n      }, city.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"City\",\n      children: \"Your city: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"citySearch\",\n      name: \"City\",\n      placeholder: \"Enter your city!\",\n      onChange: onChange,\n      value: input,\n      list: \"cities\",\n      onKeyDown: onKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LocationBar, \"y6DHqSapwwPGXJTFqIrQC3liGB8=\");\n\n_c = LocationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationBar\");","map":{"version":3,"names":["React","useEffect","useState","LocationBar","setLocationInput","cities","setCurrentCoords","input","setInput","onChange","event","currentTarget","value","onKeyDown","console","log","results","length","key","inputArray","split","admin3","trim","city","find","changeCoords","lat","latitude","toString","lng","longitude","coords","name","replaceAll","options","Array","forEach","id","country","admin1","push","map"],"sources":["/home/bela/TPL/frontend-challenges/js/03_react/weather/src/components/location-bar.tsx"],"sourcesContent":["import React, {KeyboardEventHandler, SyntheticEvent, useEffect, useState} from \"react\";\nimport {cityInformation, locationResponse} from \"../utils/Hooks/useFetch\";\n\ninterface LocationBarProps {\n    setLocationInput: (city: string) => void;\n    cities: locationResponse | null;\n    setCurrentCoords: (coords: string[]) => void;\n}\n\nexport const LocationBar: React.FC<LocationBarProps> = ({setLocationInput, cities, setCurrentCoords}) => {\n    const [input, setInput] = useState(\"\");\n    const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n        setInput(event.currentTarget.value);\n    }\n\n    function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n        console.log(cities?.results?.length)\n        if (event.key === \"Enter\" && cities?.results) {\n            const inputArray = input.split(\",\");\n            const admin3 = inputArray[inputArray.length -1].trim();\n            let city = cities.results.find((city) => city.admin3 === admin3);\n            if (!city) city = cities.results[0];\n            console.log(\"admin3: \", city.admin3);\n            changeCoords(city);\n        }\n    }\n    function changeCoords(city: cityInformation){\n        const lat = city.latitude.toString();\n        const lng = city.longitude.toString();\n        const coords = [lat, lng]\n        console.log(coords, city.name, city.admin3);\n        setCurrentCoords(coords);\n    }\n\n    useEffect(() => {\n        setLocationInput(input.replaceAll(\" \", \"%20\"));\n    }, [input])\n\n\n    const options: cityOption[] = new Array<cityOption>();\n    cities?.results?.forEach((city) => {\n        const id = city.id;\n        const name = city.name;\n        const country = city.country;\n        const admin1 = city.admin1;\n        const admin3 = city.admin3;\n        options.push({\n            id,\n            name,\n            country,\n            admin1,\n            admin3\n        })\n    })\n    return (\n        <>\n            <datalist id={\"cities\"}>\n                {options.map((city) =>\n                    <option\n                        key={city.id}>{city.name + \", \" + city.country + \", \" + city.admin1 + (city.admin3 ? \", \" + city.admin3 : \"\")}\n                    </option>)}\n            </datalist>\n            <label htmlFor={\"City\"}>Your city: </label>\n            <input className={\"citySearch\"} name={\"City\"} placeholder={\"Enter your city!\"} onChange={onChange}\n                   value={input} list={\"cities\"} onKeyDown={onKeyDown}/>\n        </>\n    )\n}\ninterface cityOption {\n    id: number\n    name: string,\n    country: string,\n    admin1: string,\n    admin3: string | undefined\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}