{"ast":null,"code":"import _slicedToArray from\"/home/bela/TPL/frontend-challenges/js/03_react/weather/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import'./App.css';import\"./components/fore-cast\";import{MainPart}from\"./components/main-part\";import{CastType,ForeCast}from\"./components/fore-cast\";import{useFetch,useFetchLocation}from\"./utils/Hooks/useFetch\";import useLocation from\"./utils/Hooks/useLocation\";import{getWeatherStatus,getWeatherType,WeatherType}from\"./utils/GetWeatherType\";import{useInterval}from\"./utils/Hooks/useInterval\";import{timeZoneOffset}from\"./utils/constant\";import{addHours}from\"./utils/time/addHours\";import{getDayPreviews,getHourPreviews}from\"./utils/previews/hourPreviews\";import{getDayFromDate,getDayFromString}from\"./utils/time/formatTime\";import{LocationBar}from\"./components/location-bar\";import useDebounce from\"./utils/Hooks/useDebounce\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(addHours(timeZoneOffset).toISOString().substring(0,19)),_useState2=_slicedToArray(_useState,2),currentTimeExact=_useState2[0],setCurrentTimeExact=_useState2[1];var _useState3=useState(-1),_useState4=_slicedToArray(_useState3,2),previewIndex=_useState4[0],setPreviewIndex=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),previewDataDay=_useState6[0],setPreviewDataDay=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),previewDataWeek=_useState8[0],setPreviewDataWeek=_useState8[1];var currentTime=currentTimeExact.substring(0,16);var _useLocation=useLocation(null),_useLocation2=_slicedToArray(_useLocation,2),currentCoords=_useLocation2[0],setCoords=_useLocation2[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),currentCity=_useState10[0],setCurrentCity=_useState10[1];var url=currentCoords&&\"https://api.open-meteo.com/v1/forecast?latitude=\".concat(currentCoords[0],\"&longitude=\").concat(currentCoords[1],\"&hourly=temperature_2m,weathercode&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&timezone=Europe%2FBerlin\");var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),inputCity=_useState12[0],setInputCity=_useState12[1];var _useDebounce=useDebounce(\"https://geocoding-api.open-meteo.com/v1/search?name=\".concat(inputCity,\"&count=5\"),300),_useDebounce2=_slicedToArray(_useDebounce,1),locationURL=_useDebounce2[0];var locations=useFetchLocation(locationURL);var allData=useFetch(url);useEffect(function(){if(previewIndex===-1||allData===null){setPreviewDataDay(null);}else if(allData!=null){var newPreviewData=getHourPreviews(allData.hourly,allData.hourly.time[previewIndex]);setPreviewDataDay({previewData:newPreviewData,headline:getDayFromString(allData.hourly.time[previewIndex])+\" - Ganzer Tag\"});}},[previewIndex,allData]);useEffect(function(){if(previewIndex===-1&&allData!=null){setPreviewDataWeek({previewData:getDayPreviews(allData.daily),headline:\"Diese Woche\"});}},[previewIndex,allData]);useInterval(function(){return setCurrentTimeExact(addHours(timeZoneOffset+1/60,new Date(currentTime)).toISOString().substring(0,19));},60000);function getIconURL(code){var weatherType=getWeatherType(code);weatherType=weatherType===WeatherType.FREEZING_RAIN?WeatherType.RAIN:weatherType;return\"./assets/icons/\".concat(weatherType,\".svg\");}function getBackgroundUrl(code){var weatherType=getWeatherType(code);weatherType=weatherType===WeatherType.FREEZING_RAIN?WeatherType.RAIN:weatherType;var url=\"url(./assets/backgrounds/\".concat(weatherType,\".png)\");return url;}function roundTime(currentTime){return currentTime.substring(0,14)+\"00\";}function changePreviewIndex(day){var index=allData?allData.hourly.time.indexOf(day):0;setPreviewIndex(index);}getDayFromDate(new Date(Date.now()));if(!allData)return/*#__PURE__*/_jsx(\"div\",{className:\"loader\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"app screen-overlay\",style:{backgroundImage:getBackgroundUrl(allData.hourly.weathercode[allData.hourly.time.indexOf(roundTime(currentTime))])},children:[/*#__PURE__*/_jsx(MainPart,{currentTime:currentTime,getWeatherStatus:getWeatherStatus,hourly:allData.hourly,getIconURL:getIconURL,city:currentCity}),/*#__PURE__*/_jsx(\"h2\",{className:\"cityHeadline\",children:\"Change your city\"}),/*#__PURE__*/_jsx(LocationBar,{setLocationInput:setInputCity,cities:locations,setCurrentCoords:setCoords,setCity:setCurrentCity}),/*#__PURE__*/_jsx(ForeCast,{castType:CastType.HOURLY,previewData:getHourPreviews(allData.hourly),changePreviewIndex:changePreviewIndex,headline:\"Rest des Tages\"}),/*#__PURE__*/_jsx(ForeCast,{castType:CastType.DAILY,previewData:previewDataWeek?previewDataWeek.previewData:null,changePreviewIndex:changePreviewIndex,headline:previewDataWeek?previewDataWeek.headline:\"\"}),/*#__PURE__*/_jsx(ForeCast,{previewData:previewDataDay?previewDataDay.previewData:null,castType:CastType.FULLDAY,changePreviewIndex:changePreviewIndex,headline:previewDataDay?previewDataDay.headline:\"\"})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","MainPart","CastType","ForeCast","useFetch","useFetchLocation","useLocation","getWeatherStatus","getWeatherType","WeatherType","useInterval","timeZoneOffset","addHours","getDayPreviews","getHourPreviews","getDayFromDate","getDayFromString","LocationBar","useDebounce","App","toISOString","substring","currentTimeExact","setCurrentTimeExact","previewIndex","setPreviewIndex","previewDataDay","setPreviewDataDay","previewDataWeek","setPreviewDataWeek","currentTime","currentCoords","setCoords","currentCity","setCurrentCity","url","inputCity","setInputCity","locationURL","locations","allData","newPreviewData","hourly","time","previewData","headline","daily","Date","getIconURL","code","weatherType","FREEZING_RAIN","RAIN","getBackgroundUrl","roundTime","changePreviewIndex","day","index","indexOf","now","backgroundImage","weathercode","HOURLY","DAILY","FULLDAY"],"sources":["/home/bela/TPL/frontend-challenges/js/03_react/weather/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport \"./components/fore-cast\"\nimport {MainPart} from \"./components/main-part\";\nimport {CastType, ForeCast} from \"./components/fore-cast\";\nimport {useFetch, useFetchLocation} from \"./utils/Hooks/useFetch\";\nimport useLocation from \"./utils/Hooks/useLocation\";\nimport {getWeatherStatus, getWeatherType, WeatherType} from \"./utils/GetWeatherType\";\nimport {useInterval} from \"./utils/Hooks/useInterval\"\nimport {timeZoneOffset} from \"./utils/constant\";\nimport {addHours} from \"./utils/time/addHours\";\nimport {getDayPreviews, getHourPreviews, previewData} from \"./utils/previews/hourPreviews\";\nimport {getDayFromDate, getDayFromString} from \"./utils/time/formatTime\";\nimport {LocationBar} from \"./components/location-bar\";\nimport useDebounce from \"./utils/Hooks/useDebounce\";\n\ninterface previewsData {\n    previewData: previewData[];\n    headline: string;\n}\n\nfunction App() {\n    const [currentTimeExact, setCurrentTimeExact] = useState(addHours(timeZoneOffset).toISOString().substring(0, 19));\n    const [previewIndex, setPreviewIndex] = useState<number>(-1);\n    const [previewDataDay, setPreviewDataDay] = useState<previewsData | null>(null)\n    const [previewDataWeek, setPreviewDataWeek] = useState<previewsData | null>()\n    const currentTime = currentTimeExact.substring(0, 16);\n    const [currentCoords, setCoords] = useLocation(null);\n    const [currentCity, setCurrentCity] = useState<string | null>(null);\n    const url = currentCoords && `https://api.open-meteo.com/v1/forecast?latitude=${currentCoords[0]}&longitude=${currentCoords[1]}&hourly=temperature_2m,weathercode&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&timezone=Europe%2FBerlin`;\n    const [inputCity, setInputCity] = useState(\"\");\n    const [locationURL] = useDebounce(`https://geocoding-api.open-meteo.com/v1/search?name=${inputCity}&count=5`, 300);\n    const locations = useFetchLocation(locationURL);\n    const allData = useFetch(url);\n\n    useEffect(() => {\n        if (previewIndex === -1 || allData === null) {\n            setPreviewDataDay(null)\n        } else if (allData != null) {\n            const newPreviewData = getHourPreviews(allData.hourly, allData.hourly.time[previewIndex]);\n            setPreviewDataDay({\n                previewData: newPreviewData,\n                headline: getDayFromString(allData.hourly.time[previewIndex]) + \" - Ganzer Tag\"\n            });\n        }\n    }, [previewIndex, allData])\n\n    useEffect(() => {\n        if (previewIndex === -1 && allData != null) {\n            setPreviewDataWeek({previewData: getDayPreviews(allData.daily), headline: \"Diese Woche\"})\n        }\n    }, [previewIndex, allData])\n\n    useInterval(() => setCurrentTimeExact(addHours(timeZoneOffset + 1 / (60), new Date(currentTime)).toISOString().substring(0, 19)), 60000)\n\n\n    function getIconURL(code: number) {\n        let weatherType = getWeatherType(code);\n        weatherType = weatherType === WeatherType.FREEZING_RAIN ? WeatherType.RAIN : weatherType;\n\n        return `./assets/icons/${weatherType}.svg`;\n    }\n\n    function getBackgroundUrl(code: number) {\n        let weatherType = getWeatherType(code)\n        weatherType = weatherType === WeatherType.FREEZING_RAIN ? WeatherType.RAIN : weatherType;\n        let url = `url(./assets/backgrounds/${weatherType}.png)`;\n        return url;\n    }\n\n    function roundTime(currentTime: string) {\n        return currentTime.substring(0, 14) + \"00\";\n    }\n\n    function changePreviewIndex(day: string) {\n        let index = allData ? allData.hourly.time.indexOf(day) : 0;\n        setPreviewIndex(index);\n    }\n\n    getDayFromDate(new Date(Date.now()))\n    if (!allData) return <div className=\"loader\"/>\n    return (<div className=\"app screen-overlay\"\n                 style={{backgroundImage: getBackgroundUrl(allData.hourly.weathercode[allData.hourly.time.indexOf(roundTime(currentTime))])}}>\n        <MainPart currentTime={currentTime} getWeatherStatus={getWeatherStatus} hourly={allData.hourly}\n                  getIconURL={getIconURL} city={currentCity}/>\n        <h2 className=\"cityHeadline\">Change your city</h2>\n        <LocationBar setLocationInput={setInputCity} cities={locations} setCurrentCoords={setCoords}\n                     setCity={setCurrentCity}/>\n        <ForeCast castType={CastType.HOURLY} previewData={getHourPreviews(allData.hourly)}\n                  changePreviewIndex={changePreviewIndex} headline=\"Rest des Tages\"/>\n        <ForeCast castType={CastType.DAILY} previewData={previewDataWeek ? previewDataWeek.previewData : null}\n                  changePreviewIndex={changePreviewIndex} headline={previewDataWeek ? previewDataWeek.headline : \"\"}/>\n        <ForeCast previewData={previewDataDay ? previewDataDay.previewData : null} castType={CastType.FULLDAY}\n                  changePreviewIndex={changePreviewIndex} headline={previewDataDay ? previewDataDay.headline : \"\"}/>\n    </div>);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}